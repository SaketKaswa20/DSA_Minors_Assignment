class DoublyLinkedList {
    class Node {
        int data;
        Node next;
        Node prev;

        Node(int data) {
            this.data = data;
            this.next = null;
            this.prev = null;
        }
    }

    private Node head;

    public DoublyLinkedList() {
        head = null;
    }

    public void insert(int data) {
        Node newNode = new Node(data);

        if (head == null) {
            head = newNode;
        } else {
            Node current = head;
            while (current.next != null) {
                current = current.next;
            }
            current.next = newNode;
            newNode.prev = current;
        }
    }

    public void displayAscending() {
        Node current = head;
        while (current != null) {
            System.out.print(current.data + " ");
            current = current.next;
        }
        System.out.println();
    }

    public void displayDescending() {
        Node current = head;
        while (current != null && current.next != null) {
            current = current.next;
        }

        while (current != null) {
            System.out.print(current.data + " ");
            current = current.prev;
        }
        System.out.println();
    }

    public void sortAscending() {
        if (head == null || head.next == null) {
            return; // List is already sorted
        }

        Node current = head.next;

        while (current != null) {
            Node temp = current;
            Node index = current.prev;

            while (index != null && index.data > temp.data) {
                index.next = temp;
                current.prev = index.prev;
                temp.prev = index;
                if (index.prev != null) {
                    index.prev.next = temp;
                } else {
                    head = temp;
                }
                index.prev = temp;
                index = current.prev;
            }
            current = current.next;
        }
    }

    public void sortDescending() {
        if (head == null || head.next == null) {
            return; // List is already sorted
        }

        Node current = head.next;

        while (current != null) {
            Node temp = current;
            Node index = current.prev;

            while (index != null && index.data < temp.data) {
                index.next = temp;
                current.prev = index.prev;
                temp.prev = index;
                if (index.prev != null) {
                    index.prev.next = temp;
                } else {
                    head = temp;
                }
                index.prev = temp;
                index = current.prev;
            }
            current = current.next;
        }
    }
}

public class Main {
    public static void main(String[] args) {
        DoublyLinkedList list = new DoublyLinkedList();

        list.insert(5);
        list.insert(2);
        list.insert(8);
        list.insert(1);
        list.insert(9);

        System.out.println("Original List (Ascending):");
        list.displayAscending();

        list.sortAscending();
        System.out.println("Sorted List (Ascending):");
        list.displayAscending();

        System.out.println("Sorted List (Descending):");
        list.displayDescending();
    }
}
